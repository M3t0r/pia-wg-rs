name: CI

on:
  push:
    branches: ["*"]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, '1.74.0']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --verbose
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: pia-wg-${{ runner.os }}-${{ runner.arch }}
        path: target/debug/pia-wg${{ runner.os == 'Windows' && '.exe' || '' }}
    - name: Run tests
      run: cargo test --verbose

  lint-and-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Lint
      run: cargo clippy -- -D warnings -W clippy::pedantic
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  spell-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install codespell
      run: pip install codespell
    - name: Run codespell
      run: codespell **/*.rs **/*.md

